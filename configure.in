dnl Process this file with autoconf to produce a configure script.
AC_INIT(README)

dnl Check system type
AC_CANONICAL_HOST
AC_CANONICAL_TARGET

AM_INIT_AUTOMAKE(invaders, 0.8)
AM_CONFIG_HEADER(config.h)

dnl Use 44kHz audio?
AC_ARG_ENABLE(audio-44kHz,
	[  --enable-audio-44kHz    Use 44kHz audio mode],
	[AC_DEFINE([AUDIO_44KHZ],1,[Define to use 44kHz audio])])

dnl Use fullscreen video mode?
AC_ARG_ENABLE(fullscreen,
	[  --enable-fullscreen     Use full screen video mode],
	[AC_DEFINE([FULLSCREEN],1,[Define to use SDL fullscreen mode])])

dnl Use debug info?
CFLAGS="-O2 -fomit-frame-pointer"
AC_ARG_ENABLE(debug,
	[  --enable-debug          Compile with debug information],
	[CFLAGS="-g -O2"
	AC_DEFINE([DEBUG],1,[Define if using debug info])])

dnl Set CFLAGS
CFLAGS="$CFLAGS -Wall -pipe"

dnl Setup some platform dependant things.
case "$target" in
        armv4*-*-linux*)
                CFLAGS="$CFLAGS -mtune=strongarm110 -march=armv4"
                ;;
esac

dnl Do we want to use NEO?
AC_ARG_WITH(libneo,
	[  --with-libneo           Use libneo as media library],
	[WITH_NEO="yes"],
	[WITH_NEO="no"])

dnl Do we want to use SDL?
AC_ARG_WITH(libsdl,
	[  --with-libsdl           Use libSDL as media library],
	[WITH_SDL="yes"],
	[WITH_SDL="no"])

dnl Checks for programs.
AC_PROG_RANLIB
AC_PROG_CC
AC_PROG_INSTALL

dnl Checks for essential libraries.
AC_CHECK_LIB(m, main, , [AC_MSG_ERROR([
*** Invaders depends on libm.])])
AC_CHECK_LIB(z, main, , [AC_MSG_ERROR([
*** Invaders depends on libz.])])

dnl Test for NEO or SDL libraries and header files.
if test "$WITH_NEO" = "yes" -o "$WITH_SDL" = "no"
then
	AC_CHECK_LIB(neo, main, [foo=bar], [AC_MSG_ERROR([
*** NEO library not found (libneo).])])
	AC_CHECK_HEADERS(neo/neo.h, , [AC_MSG_ERROR([
*** NEO header file not found (neo/neo.h).])])
	MEDIA_CFLAGS=""
	MEDIA_LIBS="-lneo"
	AC_DEFINE([HAVE_LIBNEO],1,[Define if using libneo])
else
	AC_CHECK_PROG(SDL_CONFIG, sdl-config, "yes", "no")
	if test "$SDL_CONFIG" = "no"; then
		AC_MSG_ERROR([
*** SDL configuration program not found (sdl-config).])
	fi
	MEDIA_CFLAGS="`sdl-config --cflags`"
	MEDIA_LIBS="`sdl-config --libs`"
	AC_CHECK_LIB(SDL, main, [foo=bar], [AC_MSG_ERROR([
*** SDL library not found (libSDL).])], [$MEDIA_LIBS])
dnl	AC_CHECK_HEADERS(SDL/SDL.h, , [AC_MSG_ERROR([
dnl*** SDL header file not found (SDL/SDL.h).])])
	AC_DEFINE([HAVE_LIBSDL],1,[Define if using libsdl])
fi

dnl Export media library cflags and libs.
AC_SUBST(MEDIA_CFLAGS)
AC_SUBST(MEDIA_LIBS)

AC_OUTPUT([
Makefile
data/Makefile
data/pov/Makefile
src/Makefile
src/tools/Makefile
src/libgfx/Makefile
src/gfxgen/Makefile
src/libsynth/Makefile
src/invaders/Makefile
])
